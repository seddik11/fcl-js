{"version":3,"file":"fcl.js","sources":["../src/VERSION.js","../src/config-utils.js","../src/default-config.js","../src/exec/utils/is.js","../src/exec/utils/normalize-args.js","../src/exec/query.js","../src/current-user/normalize/__vsn.js","../src/current-user/normalize/frame.js","../src/current-user/normalize/back-channel-rpc.js","../src/current-user/normalize/local-view.js","../src/current-user/normalize/service.js","../src/current-user/normalize/pre-authz.js","../src/current-user/normalize/authz.js","../src/current-user/normalize/authn.js","../src/current-user/normalize/open-id.js","../src/current-user/normalize/user-signature.js","../src/current-user/normalize/account-proof.js","../src/current-user/normalize/authn-refresh.js","../src/current-user/build-user.js","../src/current-user/fetch-services.js","../src/current-user/merge-services.js","../src/current-user/service-of-type.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/current-user/normalize/polling-response.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/utils/render-frame.js","../src/current-user/exec-service/strategies/utils/render-pop.js","../src/current-user/exec-service/strategies/utils/render-tab.js","../src/current-user/exec-service/exec-local.js","../src/current-user/exec-service/strategies/http-post.js","../src/current-user/exec-service/strategies/utils/buildMessageHandler.js","../src/current-user/exec-service/strategies/utils/frame.js","../src/current-user/exec-service/strategies/utils/pop.js","../src/current-user/exec-service/strategies/utils/tab.js","../src/current-user/exec-service/strategies/utils/extension.js","../src/current-user/exec-service/index.js","../src/current-user/exec-service/strategies/iframe-rpc.js","../src/current-user/exec-service/strategies/pop-rpc.js","../src/current-user/exec-service/strategies/tab-rpc.js","../src/current-user/exec-service/strategies/ext-rpc.js","../src/exec/verify.js","../src/current-user/normalize/composite-signature.js","../src/current-user/index.js","../src/transaction/index.js","../src/events/index.js","../src/discovery/services.js","../src/discovery/services/authn.js","../src/discovery/index.js","../src/wallet-utils/on-message-from-fcl.js","../src/wallet-utils/send-msg-to-fcl.js","../src/wallet-utils/encode-provable-authn-signing.js","../src/wallet-utils/encode-provable-authn-verifying.js","../src/wallet-utils/CompositeSignature.js","../src/wallet-utils/inject-ext-service.js","../src/fcl.js","../src/exec/mutate.js","../src/serialize/index.js"],"sourcesContent":["export const VERSION = process.env.CURRENT_VERSION || \"TESTVERSION\"\n","import {config} from \"@onflow/sdk\"\nimport {VERSION} from \"./VERSION\"\n\nconst isServerSide = () => typeof window === \"undefined\"\n\nconst SESSION_STORAGE = {\n  can: !isServerSide(),\n  get: async key => JSON.parse(sessionStorage.getItem(key)),\n  put: async (key, value) => sessionStorage.setItem(key, JSON.stringify(value)),\n}\n\nconst LOCAL_STORAGE = {\n  can: !isServerSide(),\n  get: async key => JSON.parse(localStorage.getItem(key)),\n  put: async (key, value) => localStorage.setItem(key, JSON.stringify(value)),\n}\n\nconst NO_STORAGE = {\n  can: false,\n}\n\nexport const STORAGE_DEFAULT = SESSION_STORAGE\nexport const DISCOVERY_METHOD = \"IFRAME/RPC\"\n\nexport async function configLens(regex) {\n  return Object.fromEntries(\n    Object.entries(await config().where(regex)).map(([key, value]) => [\n      key.replace(regex, \"\"),\n      value,\n    ])\n  )\n}\n\nexport async function getDiscoveryService() {\n  const discoveryWallet = await config.first([\n    \"discovery.wallet\",\n    \"challenge.handshake\",\n  ])\n\n  const discoveryAuthnInclude = await config.get(\"discovery.authn.include\", [])\n\n  const discoveryWalletMethod = await config.first([\n    \"discovery.wallet.method\",\n    \"discovery.wallet.method.default\",\n  ])\n\n  return {\n    type: \"authn\",\n    endpoint: discoveryWallet,\n    method: discoveryWalletMethod,\n    discoveryAuthnInclude\n  }\n}\n","import {config} from \"@onflow/sdk\"\nimport {DISCOVERY_METHOD, STORAGE_DEFAULT} from \"./config-utils\"\n\nconfig({\n  \"discovery.wallet.method.default\": DISCOVERY_METHOD,\n  \"fcl.storage.default\": STORAGE_DEFAULT,\n})\n","const is = type => d => typeof d === type\n\nexport const isRequired = d => d != null\nexport const isObject = is(\"object\")\nexport const isString = is(\"string\")\nexport const isFunc = is(\"function\")\nexport const isNumber = is(\"number\")\n","import {isFunc} from \"./is\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\n\nexport function normalizeArgs(ax) {\n  if (isFunc(ax)) return ax(sdk.arg, t)\n  return []\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\nimport {isRequired, isObject, isString, isFunc} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\n\n/** Query the Flow Blockchain\n *\n *  @arg {Object} opts         - Query Options and configuration\n *  @arg {string} opts.cadence - Cadence Script used to query Flow\n *  @arg {ArgsFn} opts.args    - Arguments passed to cadence script\n *  @arg {number} opts.limit   - Compute Limit for Query\n *  @returns {Promise<Response>}\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    const cadence = `\n *      cadence: `\n *        pub fun main(a: Int, b: Int, c: Address): Int {\n *          log(c)\n *          return a + b\n *        }\n *    `.trim()\n *\n *    const args = (arg, t) => [\n *      arg(5, t.Int),\n *      arg(7, t.Int),\n *      arg(\"0xb2db43ad6bc345fec9\", t.Address),\n *    ]\n *\n *    await query({ cadence, args })\n */\nexport async function query(opts = {}) {\n  await preQuery(opts)\n\n  // prettier-ignore\n  return sdk.send([\n    sdk.script(opts.cadence),\n    sdk.args(normalizeArgs(opts.args || [])),\n    opts.limit && typeof opts.limit === \"number\" && sdk.limit(opts.limit)\n  ]).then(sdk.decode)\n}\n\nasync function preQuery(opts) {\n  invariant(\n    isRequired(opts.cadence),\n    \"query({ cadence }) -- cadence is required\"\n  )\n\n  invariant(\n    isString(opts.cadence),\n    \"query({ cadence }) -- cadence must be a string\"\n  )\n\n  invariant(\n    await sdk.config.get(\"accessNode.api\"),\n    `Required value for \"accessNode.api\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGMA = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const OPEN_ID_PRAGMA = {\n  f_type: \"OpenId\",\n  f_vsn: \"1.0.0\",\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    type: \"local-view\",\n//    method: \"VIEW/IFRAME\",\n//    endpoint: \"https://woot.org/authz/local\",\n//    data: {},\n//    params: {},\n// }\nexport function normalizeLocalView(resp) {\n  if (resp == null) return null\n  if (resp.method == null) {\n    resp = {...resp, type: \"local-view\", method: \"VIEW/IFRAME\"}\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: resp.type || \"local-view\",\n        method: resp.method,\n        endpoint: resp.endpoint,\n        data: resp.data || {},\n        params: resp.params || {},\n      }\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeOpenId} from \"./open-id\"\nimport {normalizeUserSignature} from \"./user-signature\"\nimport {normalizeLocalView} from \"./local-view\"\nimport {normalizeAccountProof} from \"./account-proof\"\nimport {normalizeAuthnRefresh} from \"./authn-refresh\"\n\nexport function normalizeServices(services, data) {\n  return services.map(service => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n  \"open-id\": normalizeOpenId,\n  \"user-signature\": normalizeUserSignature,\n  \"local-view\": normalizeLocalView,\n  \"account-proof\": normalizeAccountProof,\n  \"authn-refresh\": normalizeAuthnRefresh,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {SERVICE_PRAGMA, OPEN_ID_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"open-id\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"method: \"data\",\n//   \"data\": {\n//      \"profile\": {\n//        \"name\": \"Bob\",\n//        \"family_name\": \"Builder\",\n//        \"given_name\": \"Robert\",\n//        \"middle_name\": \"the\",\n//        \"nickname\": \"Bob the Builder\",\n//        \"perferred_username\": \"bob\",\n//        \"profile\": \"https://www.bobthebuilder.com/\",\n//        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n//        \"gender\": \"...\",\n//        \"birthday\": \"2001-01-18\",\n//        \"zoneinfo\": \"America/Vancouver\",\n//        \"locale\": \"en-us\",\n//        \"updated_at\": \"1614970797388\"\n//      },\n//      \"email\": {\n//        \"email\": \"bob@bob.bob\",\n//        \"email_verified\": true\n//      },\n//      \"address\": {\n//        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n//      },\n//      \"phone\": {\n//        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n//        \"phone_number_verified\": true\n//      },\n//      \"social\": {\n//        \"twitter\": \"@_qvvg\",\n//        \"twitter_verified\": true\n//      },\n//   }\n// }\nexport function normalizeOpenId(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"user-signature\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"IFRAME/RPC\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of user-signature request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeUserSignature(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid user-signature service\")\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"account-proof\",\n//   \"method\": \"DATA\",\n//   \"uid\": \"awesome-wallet#account-proof\",\n//   \"data\": {\n//     \"f_type\": \"account-proof\",\n//     \"f_vsn\": \"1.0.0\",\n//     \"address\": \"0xUSER\",   // The users address\n//     \"timestamp\": 1630705495551, // UNIX timestamp\n//     \"appDomainTag\": \"AWESOME_DAPP\", // Optional, but recommended. Defaults to \"APP-V0.0-user\"\n//     \"signature\": CompositeSignature, // Optional\n//    }\n// }\n\nexport function normalizeAccountProof(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid account-proof service\")\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn-refresh\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\",  // \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthnRefresh(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid authn-refresh service\")\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"./normalize/__vsn\"\nimport {normalizeService} from \"./normalize/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.expires,\n  }\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  url.searchParams.append(\"l6n\", window.location.origin)\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then((d) => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED | REDIRECT\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status ?? \"APPROVED\",\n        reason: resp.reason ?? null,\n        data: resp.compositeSignature || resp.data || {...resp} || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {normalizePollingResponse} from \"../../../normalize/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  const resp = await fetchService(service, {\n    method: serviceMethod(service),\n  }).then(normalizePollingResponse)\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  return win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 770)\n  } else if (previousUrl !== src) {\n    popup.location.replace(src)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n    }\n    popup = null\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n  } else if (previousUrl !== src) {\n    tab.location.replace(src)\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n    }\n    tab = null\n  }\n\n  return [tab, unmount]\n}\n","import {renderFrame} from \"./strategies/utils/render-frame\"\nimport {renderPop} from \"./strategies/utils/render-pop\"\nimport {renderTab} from \"./strategies/utils/render-tab\"\nimport {serviceEndpoint} from \"./strategies/utils/service-endpoint\"\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n}\n\nexport async function execLocal(service, opts = {}) {\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeLocalView} from \"../../normalize/local-view\"\nimport {poll} from \"./utils/poll\"\nimport {execLocal} from \"../exec-local\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport async function execHttpPost(service, signable, opts, config) {\n  const resp = await fetchService(service, {\n    data: {\n      fclVersion: VERSION,\n      service: {\n        params: service.params,\n        data: service.data,\n        type: service.type,\n      },\n      config,\n      ...signable,\n    },\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"REDIRECT\") {\n    return resp\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const [_, unmount] = await execLocal(normalizeLocalView(resp.local))\n\n    const close = () => {\n      try {\n        unmount()\n        canContinue = false\n      } catch (error) {\n        console.error(\"Frame Close Error\", error)\n      }\n    }\n\n    return poll(resp.updates, () => canContinue)\n      .then(serviceResponse => {\n        close()\n        return serviceResponse\n      })\n      .catch(error => {\n        console.error(error)\n        close()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","const CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nexport const buildMessageHandler =\n  ({close, send, onReady, onResponse, onMessage}) =>\n  e => {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\n    \"message\",\n    buildMessageHandler({close, send, onReady, onResponse, onMessage})\n  )\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", buildMessageHandler)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","import {renderPop} from \"./render-pop\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\n    \"message\",\n    buildMessageHandler({close, send, onReady, onResponse, onMessage})\n  )\n  const [$pop, unmount] = renderPop(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($pop && $pop.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", buildMessageHandler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {renderTab} from \"./render-tab\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\n    \"message\",\n    buildMessageHandler({close, send, onReady, onResponse, onMessage})\n  )\n  const [$tab, unmount] = renderTab(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($tab && $tab.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", buildMessageHandler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function extension(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\n    \"message\",\n    buildMessageHandler({close, send, onReady, onResponse, onMessage})\n  )\n\n  send({service})\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", buildMessageHandler)\n      onClose()\n    } catch (error) {\n      console.error(\"Ext Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      window && window.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Ext Send Error\", msg, error)\n    }\n  }\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\nimport {execExtRPC} from \"./strategies/ext-rpc\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {configLens} from \"../../config-utils\"\nimport {VERSION} from \"../../VERSION\"\n\nconst STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n  \"POP/RPC\": execPopRPC,\n  \"TAB/RPC\": execTabRPC,\n  \"EXT/RPC\": execExtRPC,\n}\n\nexport async function execService({service, msg = {}, opts = {}, config = {}}) {\n  const fullConfig = {\n    ...config,\n    services: await configLens(/^service\\./),\n    app: await configLens(/^app\\.detail\\./),\n    client: {\n      fclVersion: VERSION,\n      fclLibrary: \"https://github.com/onflow/fcl-js\",\n      hostname: window?.location?.hostname ?? null\n    }\n  }\n\n  try {\n    const res = await STRATEGIES[service.method](\n      service, \n      msg, \n      opts, \n      fullConfig\n    )\n    if (res.status === \"REDIRECT\") {\n      invariant(\n        service.type === res.data.type,\n        \"Cannot shift recursive service type in execService\"\n      )\n      return await execService({\n        service: res.data, \n        msg, \n        opts, \n        config: fullConfig\n      })\n    } else {\n      return res\n    }\n  } catch (error) {\n    console.error(\"execService({service, msg = {}, opts = {}, config = {}})\", error, {\n      service,\n      msg,\n      opts,\n      config\n    })\n    throw error\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execIframeRPC(service, body, opts, config) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n    body.data = service.data ?? null\n\n    frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            fclVersion: VERSION,\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execPopRPC(service, body, opts, config) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    body.data = service.data\n\n    pop(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execTabRPC(service, body, opts, config) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    body.data = service.data\n\n    tab(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {extension} from \"./utils/extension\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execExtRPC(service, body, opts, config) {\n  return new Promise((resolve, reject) => {\n    extension(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import { invariant } from \"@onflow/util-invariant\"\nimport { query } from \"../exec/query\"\nimport { Buffer } from \"@onflow/rlp\"\n\nexport const validateArgs = (msg, compSigs) => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Signed message must be a hex string\")\n  invariant(\n    Array.isArray(compSigs) &&\n    compSigs.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"),\n    \"Must include an Array of CompositeSignatures to verify\"\n  )\n  invariant(\n    compSigs.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]),\n    \"User signatures to be verified must be from a single account address\"\n  )\n  return true\n}\n\n/**\n * Verify a valid signature/s for an account on Flow.\n *\n * @param {string} msg - A message string in hexadecimal format\n * @param {Array} compSigs - An array of Composite Signatures\n * @param {string} compSigs[].addr - The account address\n * @param {number} compSigs[].keyId - The account keyId\n * @param {string} compSigs[].signature - The signature to verify\n * @return {bool}\n *\n * @example\n *\n *  const isValid = await fcl.verifyUserSignatures(\n *    Buffer.from('FOO').toString(\"hex\"),\n *    [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}]\n *  )\n */\nexport async function verifyUserSignatures(msg, compSigs) {\n  validateArgs(msg, compSigs)\n\n  const acctAddress = compSigs[0].addr\n  let signatures = []\n  let keyIds = []\n  compSigs.map(cs => {\n    signatures.push(cs.signature)\n    keyIds.push(cs.keyId)\n  })\n\n  return await query({\n    cadence: VERIFY_SIG_SCRIPT,\n    args: (arg, t) => [\n      arg(acctAddress, t.Address),\n      arg(msg, t.String),\n      arg(keyIds, t.Array([t.Int])),\n      arg(signatures, t.Array([t.String])),\n    ],\n  })\n}\n\nconst VERIFY_SIG_SCRIPT = `\n  import Crypto\n\n  pub fun getHashAlgo(_ x: Int): HashAlgorithm {\n    switch x {\n    case 1:\n        return HashAlgorithm.SHA2_256\n    case 2:\n        return HashAlgorithm.SHA2_384\n    case 3:\n        return HashAlgorithm.SHA3_256\n    case 4:\n        return HashAlgorithm.SHA3_384\n    case 5:\n        return HashAlgorithm.KMAC128_BLS_BLS12_381\n    default:\n        return HashAlgorithm.SHA3_256\n    }\n  }\n      \n  pub fun main(\n    acctAddress: Address,\n    message: String,\n    keyIds: [Int],\n    signatures: [String],\n  ): Bool {\n\n    let keyList = Crypto.KeyList()\n    let account = getAccount(acctAddress)\n    \n    let rawPublicKeys: [String] = []\n    let weights: [UFix64] = []\n    let signAlgos: [UInt] = []\n    let hashAlgos: [UInt] = []\n    let uniqueKeys: {Int: Bool} = {}\n    \n    for id in keyIds {\n      uniqueKeys[id] = true\n    }\n\n    assert(uniqueKeys.keys.length == keyIds.length, message: \"Invalid KeyId: Duplicate key found for account\")\n\n    var counter = 0\n    while (counter < keyIds.length) {\n      let accountKey = account.keys.get(keyIndex: keyIds[counter]) ?? panic(\"Key provided does not exist on account\")\n      rawPublicKeys.append(String.encodeHex(accountKey.publicKey.publicKey))\n      weights.append(accountKey.weight)\n      signAlgos.append(UInt(accountKey.publicKey.signatureAlgorithm.rawValue))\n      hashAlgos.append(UInt(accountKey.hashAlgorithm.rawValue))\n      counter = counter + 1\n    }\n\n    var totalWeight = 0.0\n    for weight in weights {\n      totalWeight = totalWeight + weight\n    }\n    \n    assert(totalWeight >= 900.0, message: \"Signature key weights do not meet threshold >= 900.0\")\n\n    var i = 0\n    for rawPublicKey in rawPublicKeys {\n      keyList.add(\n        PublicKey(\n          publicKey: rawPublicKey.decodeHex(),\n          signatureAlgorithm: signAlgos[i] == 2 ? SignatureAlgorithm.ECDSA_secp256k1  : SignatureAlgorithm.ECDSA_P256\n        ),\n        hashAlgorithm: getHashAlgo(Int(hashAlgos[i])),\n        weight: weights[i]\n      )\n      i = i + 1\n    }\n\n    let signatureSet: [Crypto.KeyListSignature] = []\n\n    var j = 0\n    for signature in signatures {\n      signatureSet.append(\n        Crypto.KeyListSignature(\n          keyIndex: j,\n          signature: signature.decodeHex()\n        )\n      )\n      j = j + 1\n    }\n      \n    let signedData = message.decodeHex()\n    \n    return keyList.verify(\n      signatureSet: signatureSet,\n      signedData: signedData\n    )\n  }\n`\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import \"../default-config\"\nimport * as t from \"@onflow/types\"\nimport {account, arg, config} from \"@onflow/sdk\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {buildUser} from \"./build-user\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execService} from \"./exec-service\"\nimport {verifyUserSignatures as verify} from \"../exec/verify\"\nimport {normalizeCompositeSignature} from \"./normalize/composite-signature\"\nimport {getDiscoveryService} from \"../config-utils\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst getStoredUser = async storage => {\n  const fallback = JSON.parse(DATA)\n  const stored = await storage.get(NAME)\n  if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n    storage.removeItem(NAME)\n    return fallback\n  }\n  return stored || fallback\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    if (typeof window === \"undefined\") {\n      console.warn(\n        `\n        %cFCL Warning\n        ============================\n        \"currentUser\" is only available in the browser.\n        For more info, please see the docs: https://docs.onflow.org/fcl/\n        ============================\n        `,\n        \"font-weight:bold;font-family:monospace;\"\n      )\n    }\n\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) {\n      const user = await getStoredUser(storage)\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function makeMessage() {\n  return {\n    timestamp: Date.now(),\n    appDomainTag: await config.get(\"fcl.appDomainTag\"),\n    extensions: window.fcl_extensions || [],\n  }\n}\n\nasync function authenticate({service, redir = false} = {}) {\n  return new Promise(async (resolve, reject) => {\n    spawnCurrentUser()\n    const user = await snapshot()\n    const msg = await makeMessage()\n    const opts = {redir}\n    const discoveryService = await getDiscoveryService()\n    const refreshService = serviceOfType(user.services, \"authn-refresh\")\n    \n    invariant(\n      service || discoveryService.endpoint,\n      `\n        If no service passed to \"authenticate,\" then \"discovery.wallet\" must be defined in config.\n        See: \"https://docs.onflow.org/fcl/reference/api/#setting-configuration-values\"\n      `\n    )\n\n    if (user.loggedIn) {\n      if (refreshService) {\n        try {\n          const response = await execService({\n            service: refreshService,\n            msg,\n            opts,\n          })\n          send(NAME, SET_CURRENT_USER, await buildUser(response))\n        } catch (e) {\n          console.error(\"Error: Could not refresh authentication.\", e)\n        } finally {\n          return resolve(await snapshot())\n        }\n      } else {\n        return resolve(user)\n      }\n    }\n\n    try {\n      const response = await execService({\n        service: {\n          ...(service || discoveryService),\n          method: discoveryService?.method || service.method || \"IFRAME/RPC\"\n        },\n        msg,\n        opts,\n        config: {\n          discoveryAuthnInclude: discoveryService.discoveryAuthnInclude\n        }\n      })\n      send(NAME, SET_CURRENT_USER, await buildUser(response))\n    } catch (e) {\n      console.error(\"Error while authenticating\", e)\n    } finally {\n      resolve(await snapshot())\n    }\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService({service: az, msg: signable})\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    async resolve(account, preSignable) {\n      const user = await authenticate({redir: true})\n      const authz = serviceOfType(user.services, \"authz\")\n      const preAuthz = serviceOfType(user.services, \"pre-authz\")\n\n      if (preAuthz)\n        return resolvePreAuthz(\n          await execService({\n            service: preAuthz,\n            msg: preSignable,\n          })\n        )\n      if (authz)\n        return {\n          ...account,\n          tempId: \"CURRENT_USER\",\n          resolve: null,\n          addr: sansPrefix(authz.identity.address),\n          keyId: authz.identity.keyId,\n          sequenceNum: null,\n          signature: null,\n          async signingFunction(signable) {\n            return normalizeCompositeSignature(\n              await execService({\n                service: authz,\n                msg: signable,\n                opts: {\n                  includeOlderJsonRpcCall: true,\n                },\n              })\n            )\n          },\n        }\n      throw new Error(\n        \"No Authz or PreAuthz Service configured for CURRENT_USER\"\n      )\n    },\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\nasync function resolveArgument() {\n  const {addr} = await authenticate()\n  return arg(withPrefix(addr), t.Address)\n}\n\nconst makeSignable = msg => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n\n  return {\n    message: msg,\n  }\n}\n\nasync function signUserMessage(msg) {\n  spawnCurrentUser()\n  const user = await authenticate({redir: true})\n\n  const signingService = serviceOfType(user.services, \"user-signature\")\n\n  invariant(\n    signingService,\n    \"Current user must have authorized a signing service.\"\n  )\n\n  try {\n    const response = await execService({\n      service: signingService,\n      msg: makeSignable(msg),\n    })\n    if (Array.isArray(response)) {\n      return response.map(compSigs => normalizeCompositeSignature(compSigs))\n    } else {\n      return [normalizeCompositeSignature(response)]\n    }\n  } catch (error) {\n    return error\n  }\n}\n\n// Deprecated\nasync function verifyUserSignatures(msg, compSigs) {\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n    verifyUserSignatures is no longer exported as fcl.currentUser().verifyUserSignatures\n    and is now available as fcl.verifyUserSignatures\n    ============================\n    `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n  return verify(msg, compSigs)\n}\n\nlet currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    signUserMessage,\n    verifyUserSignatures,\n    subscribe,\n    snapshot,\n    resolveArgument,\n  }\n}\n\ncurrentUser.authenticate = authenticate\ncurrentUser.unauthenticate = unauthenticate\ncurrentUser.authorization = authorization\ncurrentUser.signUserMessage = signUserMessage\ncurrentUser.verifyUserSignatures = verifyUserSignatures\ncurrentUser.subscribe = subscribe\ncurrentUser.snapshot = snapshot\ncurrentUser.resolveArgument = resolveArgument\n\nexport {currentUser}\n","import \"../default-config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport {send as fclSend, decode, getTransactionStatus} from \"@onflow/sdk\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async transactionId => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = tx => tx.status === 5\nconst isSealed = tx => tx.status >= 4\nconst isExecuted = tx => tx.status >= 3\nconst isFinalized = tx => tx.status >= 2\nconst isPending = tx => tx.status >= 1\nconst isUnknown = tx => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    ctx.merge(tx)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = transactionId => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = transactionId => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe(txStatus => {\n          if (txStatus.statusCode && !suppress) {\n            reject(txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {config, latestBlock} from \"@onflow/sdk\"\nimport {getEvents} from \"@onflow/sdk\"\nimport {send} from \"@onflow/sdk\"\nimport {decode} from \"@onflow/sdk\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(\"hwm\")\n    if (hwm == null) {\n      ctx.put(\"hwm\", await latestBlock())\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    } else {\n      let next = await latestBlock()\n      ctx.put(\"hwm\", next)\n      const data = await send([\n        getEvents(ctx.self(), hwm.height, next.height - 1),\n      ]).then(decode)\n      for (let d of data) ctx.broadcast(UPDATED, d.data)\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(\"tick\"))\n      ctx.delete(\"tick\")\n      ctx.delete(\"hwm\")\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","import {config} from \"@onflow/sdk\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {VERSION} from \"../VERSION\"\n\nconst asyncPipe = (...fns) => input => fns.reduce((chain, fn) => chain.then(fn), Promise.resolve(input))\n\nasync function addServices(services = []) {\n  const endpoint = await config.get(\"discovery.authn.endpoint\")\n  invariant(Boolean(endpoint), `\"discovery.authn.endpoint\" in config must be defined.`)\n\n  const include = await config.get(\"discovery.authn.include\", [])\n  const url = new URL(endpoint)\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      fclVersion: VERSION,\n      include\n    })\n  }).then(d => d.json())\n  .then(json => [...services, ...json])\n}\n\nfunction addExtensions(services = []) {\n  const extensions = window.fcl_extensions || []\n  return [...extensions, ...services]\n}\n\nfunction filterServicesByType(services = [], type) {\n  return services.filter(service => service.type === type)\n}\n\nexport const getServices = ({ type }) => asyncPipe(\n  addServices,\n  addExtensions,\n  s => filterServicesByType(s, type)\n)([])","import {spawn, subscriber, snapshoter, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {getServices} from \"../services\"\n\nconst NAME = \"authn\"\nconst RESULTS = \"results\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst UPDATED = \"UPDATED\"\n\nconst warn = (fact, msg) => {\n  if (fact) {\n    console.warn(\n      `\n      %cFCL Warning\n      ============================\n      ${msg}\n      For more info, please see the docs: https://docs.onflow.org/fcl/\n      ============================\n      `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    warn(typeof window === \"undefined\", '\"fcl.discovery\" is only available in the browser.')\n    const services = await getServices({ type: NAME })\n    ctx.put(RESULTS, services)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => ctx.unsubscribe(letter.from),\n  [SNAPSHOT]: async (ctx, letter) => letter.reply({...ctx.all()}),\n}\n\nconst spawnProviders = () => spawn(HANDLERS, NAME)\n\nconst authn = {\n  subscribe: cb => subscriber(NAME, spawnProviders, cb),\n  snapshot: () => snapshoter(NAME, spawnProviders)\n}\n\nexport default authn\n","import authn from \"./services/authn\"\n\nconst discovery = {\n  authn\n}\n\nexport {discovery}","export const onMessageFromFCL = (messageType, cb = () => {}) => {\n  const buildData = data => {\n    if (data.deprecated)\n      console.warn(\"DEPRECATION NOTICE\", data.deprecated.message)\n    delete data?.body?.interaction\n\n    return data\n  }\n\n  const internal = e => {\n    const {data} = e\n    if (typeof data !== \"object\") return\n    if (typeof data == null) return\n    if (data.type !== messageType) return\n\n    cb(buildData(data))\n  }\n\n  window.addEventListener(\"message\", internal)\n  return () => window.removeEventListener(\"message\", internal)\n}\n","import {onMessageFromFCL} from \"./on-message-from-fcl\"\n\nexport const sendMsgToFCL = (type, msg = {}) => {\n  if (window.location !== window.parent.location) {\n    window.parent.postMessage({...msg, type}, \"*\")\n  } else {\n    window.opener.postMessage({...msg, type}, \"*\")\n  }\n}\n\nexport const ready = (cb, msg = {}) => {\n  onMessageFromFCL(\"FCL:VIEW:READY:RESPONSE\", cb)\n  sendMsgToFCL(\"FCL:VIEW:READY\")\n}\n\nexport const close = () => {\n  sendMsgToFCL(\"FCL:VIEW:CLOSE\")\n}\n\nexport const approve = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"APPROVED\",\n    reason: null,\n    data: data,\n  })\n}\n\nexport const decline = reason => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"DECLINED\",\n    reason: reason,\n    data: null,\n  })\n}\n\nexport const redirect = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"REDIRECT\",\n    reason: null,\n    data: data,\n  })\n}\n","import {sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {encode as rlpEncode, Buffer} from \"@onflow/rlp\"\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nexport const encodeMessageForProvableAuthnSigning = (\n  address,\n  timestamp,\n  appDomainTag = \"\"\n) => {\n  invariant(\n    address,\n    \"Encode Message For Provable Authn Error: address must be defined\"\n  )\n  invariant(\n    timestamp,\n    \"Encode Message For Provable Authn Error: timestamp must be defined\"\n  )\n\n  const USER_DOMAIN_TAG = rightPaddedHexBuffer(\n    Buffer.from(\"FLOW-V0.0-user\").toString(\"hex\"),\n    32\n  )\n\n  const APP_DOMAIN_TAG = appDomainTag\n    ? rightPaddedHexBuffer(Buffer.from(appDomainTag).toString(\"hex\"), 32)\n    : null\n\n  return Buffer.concat([\n    USER_DOMAIN_TAG,\n    appDomainTag\n      ? rlpEncode([\n          APP_DOMAIN_TAG,\n          addressBuffer(sansPrefix(address)),\n          timestamp,\n        ])\n      : rlpEncode([addressBuffer(sansPrefix(address)), timestamp]),\n  ]).toString(\"hex\")\n}\n","import {sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {encode as rlpEncode, Buffer} from \"@onflow/rlp\"\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nexport const encodeMessageForProvableAuthnVerifying = (\n  address,\n  timestamp,\n  appDomainTag = \"\"\n) => {\n  invariant(\n    address,\n    \"Encode Message For Provable Authn Error: address must be defined\"\n  )\n  invariant(\n    timestamp,\n    \"Encode Message For Provable Authn Error: timestamp must be defined\"\n  )\n\n  const APP_DOMAIN_TAG = appDomainTag\n    ? rightPaddedHexBuffer(Buffer.from(appDomainTag).toString(\"hex\"), 32)\n    : null\n\n  return (\n    appDomainTag\n      ? rlpEncode([\n          APP_DOMAIN_TAG,\n          addressBuffer(sansPrefix(address)),\n          timestamp,\n        ])\n      : rlpEncode([addressBuffer(sansPrefix(address)), timestamp])\n  ).toString(\"hex\")\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {COMPOSITE_SIGNATURE_PRAGMA} from \"../current-user/normalize/__vsn\"\n\nexport function CompositeSignature(addr, keyId, signature) {\n  this.f_type = COMPOSITE_SIGNATURE_PRAGMA.f_type\n  this.f_vsn = COMPOSITE_SIGNATURE_PRAGMA.f_vsn\n  this.addr = withPrefix(addr)\n  this.keyId = Number(keyId)\n  this.signature = signature\n}\n","export function injectExtService(service) {\n  if (service.type === \"authn\" && service.endpoint != null) {\n    if (!Array.isArray(window.fcl_extensions)) {\n      window.fcl_extensions = []\n    }\n    window.fcl_extensions.push(service)\n  } else {\n    console.warn(\"Authn service is required\")\n  }\n}\n","import \"./default-config\"\nexport {VERSION} from \"./VERSION\"\nexport {query} from \"./exec/query\"\nexport {mutate} from \"./exec/mutate\"\nexport {verifyUserSignatures} from \"./exec/verify\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nimport {discovery} from \"./discovery\"\nexport {discovery}\n\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\nexport const authz = currentUser().authorization\n\nimport * as types from \"@onflow/types\"\nexport const t = types\n\nimport * as WalletUtils from \"./wallet-utils\"\nexport {WalletUtils}\n\nexport {TestUtils} from \"@onflow/sdk\"\nexport {config} from \"@onflow/sdk\"\nexport {send} from \"@onflow/sdk\"\nexport {decode} from \"@onflow/sdk\"\nexport {account} from \"@onflow/sdk\"\nexport {block} from \"@onflow/sdk\"\nexport {latestBlock} from \"@onflow/sdk\"\nexport {isOk, isBad, why, pipe, build} from \"@onflow/sdk\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\nexport {createSignableVoucher} from \"@onflow/sdk\"\nexport {voucherIntercept} from \"@onflow/sdk\"\nexport {voucherToTxId} from \"@onflow/sdk\"\n\n// builders\nexport {transaction} from \"@onflow/sdk\"\nexport {script} from \"@onflow/sdk\"\nexport {ping} from \"@onflow/sdk\"\nexport {atBlockHeight} from \"@onflow/sdk\"\nexport {atBlockId} from \"@onflow/sdk\"\nexport {getAccount} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nexport {getEventsAtBlockHeightRange} from \"@onflow/sdk\"\nexport {getEventsAtBlockIds} from \"@onflow/sdk\"\nexport {getLatestBlock} from \"@onflow/sdk\"\nexport {getBlock} from \"@onflow/sdk\"\nexport {getBlockHeader} from \"@onflow/sdk\"\nexport {getBlockById} from \"@onflow/sdk\"\nexport {getBlockByHeight} from \"@onflow/sdk\"\nexport {getCollection} from \"@onflow/sdk\"\nexport {getTransactionStatus} from \"@onflow/sdk\"\nexport {getTransaction} from \"@onflow/sdk\"\nexport {authorizations, authorization} from \"@onflow/sdk\"\nexport {args, arg} from \"@onflow/sdk\"\nexport {proposer} from \"@onflow/sdk\"\nexport {payer} from \"@onflow/sdk\"\nexport {limit} from \"@onflow/sdk\"\nexport {ref} from \"@onflow/sdk\"\nexport {params, param} from \"@onflow/sdk\"\nexport {validator} from \"@onflow/sdk\"\nexport {invariant} from \"@onflow/sdk\"\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString, isFunc, isNumber} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {currentUser} from \"../current-user\"\nimport {transaction} from \"../transaction\"\n\n/** As the current user Mutate the Flow Blockchain\n *\n *  @arg {Object} opts - Mutation Options and configuration\n *  @arg {string} opts.cadence - Cadence Transaction used to mutate Flow\n *  @arg {ArgsFn} opts.args - Arguments passed to cadence transaction\n *  @arg {number} opts.limit - Compute Limit for transaction\n *  @returns {string} Transaction Id\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    fcl.mutate({\n *      cadence: `\n *        transaction(a: Int, b: Int, c: Address) {\n *          prepare(acct: AuthAccount) {\n *            log(acct)\n *            log(a)\n *            log(b)\n *            log(c)\n *          }\n *        }\n *      `,\n *      args: (arg, t) => [\n *        arg(6, t.Int),\n *        arg(7, t.Int),\n *        arg(\"0xba1132bc08f82fe2\", t.Address),\n *      ],\n *    })\n *\n *\n *  Options:\n *    type Options = {\n *      cadence: String!,\n *      args: (arg, t) => Array<Arg>,\n *      limit: Number,\n *      authz: AuthzFn, // will overload the trinity of signatory roles\n *      proposer: AuthzFn, // will overload the proposer signatory role\n *      payer: AuthzFn, // will overload the payer signatory role\n *      authorizations: [AuthzFn], // an array of authorization functions used as authorizations signatory roles\n *    }\n */\n\nconst noop = () => {}\n\nexport async function mutate(opts = {}) {\n  var txid\n  try {\n    await prepMutation(opts)\n\n    // Allow for a config to overwrite the authorization function.\n    // prettier-ignore\n    const authz = await sdk.config().get(\"fcl.authz\", currentUser().authorization)\n\n    // prettier-ignore\n    txid = sdk.send([\n      sdk.transaction(opts.cadence),\n\n      sdk.args(normalizeArgs(opts.args || [])),\n\n      opts.limit && isNumber(opts.limit) && sdk.limit(opts.limit),\n\n      // opts.proposer > opts.authz > authz\n      sdk.proposer(opts.proposer || opts.authz || authz),\n\n      // opts.payer > opts.authz > authz\n      sdk.payer(opts.payer || opts.authz || authz),\n\n      // opts.authorizations > [opts.authz > authz]\n      sdk.authorizations(opts.authorizations || [opts.authz || authz]),\n    ]).then(sdk.decode)\n\n    return txid\n  } catch (error) {\n    throw error\n  }\n}\n\nasync function prepMutation(opts) {\n  // prettier-ignore\n  invariant(isRequired(opts), \"mutate(opts) -- opts is required\")\n  // prettier-ignore\n  invariant(isObject(opts), \"mutate(opts) -- opts must be an object\")\n  // prettier-ignore\n  invariant(isRequired(opts.cadence), \"mutate({ cadence }) -- cadence is required\")\n  // prettier-ignore\n  invariant(isString(opts.cadence), \"mutate({ cadence }) -- cadence must be a string\")\n  // prettier-ignore\n  invariant(\n    await sdk.config.get(\"accessNode.api\"),\n    `Required value for \"accessNode.api\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n}\n","import {interaction, pipe} from \"@onflow/sdk\"\nimport {resolve as defaultResolve} from \"@onflow/sdk\"\nimport {config, createSignableVoucher} from \"@onflow/sdk\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  const resolveFunction = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n\n  return JSON.stringify(\n    createSignableVoucher(await resolveFunction(args)),\n    null,\n    2\n  )\n}\n"],"names":["VERSION","configLens","regex","config","where","Object","fromEntries","entries","map","value","replace","SESSION_STORAGE","can","window","get","key","JSON","parse","sessionStorage","getItem","put","setItem","stringify","is","type","d","isRequired","isObject","isString","isFunc","isNumber","normalizeArgs","ax","sdk","arg","t","query","opts","invariant","cadence","preQuery","send","script","args","limit","then","decode","SERVICE_PRAGMA","f_type","f_vsn","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeFrame","service","old","endpoint","params","data","normalizeBackChannelRpc","method","normalizeLocalView","resp","serviceNormalizers","uid","id","identity","address","withPrefix","addr","keyId","authz","authn","pid","provider","name","icon","frame","Error","deriveCompositeId","rlp","encode","toString","buildUser","paddr","normalizeData","services","servicesURL","code","url","URL","searchParams","append","fetch","headers","json","Array","isArray","authorizations","push","fetchServices","hks","sx1","sx2","error","console","normalizeService","find","findService","cid","loggedIn","expiresAt","expires","serviceOfType","serviceEndpoint","location","origin","fetchService","body","undefined","normalizePollingResponse","status","reason","compositeSignature","updates","authorizationUpdates","local","poll","canContinue","serviceMethod","Promise","r","setTimeout","OPTIONS","FRAME","renderFrame","src","document","getElementById","$frame","createElement","allow","frameBorder","style","cssText","contentWindow","remove","popup","previousUrl","renderPop","win","_popup","closed","open","top","outerHeight","screenY","h","outerWidth","screenX","w","focus","close","tab","renderTab","_tab","VIEWS","execHttpPost","signable","fclVersion","execLocal","unmount","serviceResponse","_","e","toLowerCase","IGNORE","Set","deprecate","was","want","warn","buildMessageHandler","onReady","onResponse","onMessage","has","noop","execService","msg","fullConfig","app","client","fclLibrary","hostname","_window","_window$location","recover","result","STRATEGIES","res","resolve","reject","includeOlderJsonRpcCall","onClose","addEventListener","removeEventListener","postMessage","deprecated","message","jsonrpc","redir","$pop","timer","setInterval","clearInterval","pop","$tab","extension","verifyUserSignatures","compSigs","validateArgs","acctAddress","signatures","keyIds","cs","signature","VERIFY_SIG_SCRIPT","Address","String","Int","test","every","sig","i","arr","normalizeCompositeSignature","sansPrefix","pact","state","s","o","_settle","bind","v","observer","verify","_Pact","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","signUserMessage","spawnCurrentUser","authenticate","user","signingService","makeSignable","response","_catch","resolveArgument","authorization","account","tempId","preSignable","sequenceNum","signingFunction","preAuthz","proposer","payer","normalizePreAuthzResponse","axs","role","az","join","authorizer","resolvePreAuthz","snapshot","makeMessage","first","discoveryWallet","discoveryAuthnInclude","discoveryWalletMethod","getDiscoveryService","discoveryService","finalizer","NAME","SET_CURRENT_USER","refreshService","Date","now","timestamp","appDomainTag","extensions","fcl_extensions","UPDATED","DATA","HANDLERS","INIT","ctx","merge","storage","fallback","stored","removeItem","getStoredUser","notExpired","SUBSCRIBE","letter","subscribe","from","all","UNSUBSCRIBE","unsubscribe","reply","broadcast","spawn","unauthenticate","EXIT","self","update","stage","shouldContinue","_resumeAfterTest","_resumeAfterBody","updateValue","receive","tag","_exit2","expectReply","timeout","currentUser","fetchTxStatus","transactionId","fclSend","getTransactionStatus","isSealed","tx","isExecuted","isFinalized","sendSelf","SNAPSHOT","cur","next","scoped","spawnTransaction","transaction","subscriber","once","predicate","suppress","unsub","txStatus","statusCode","errorMessage","snapshoter","onceFinalized","onceExecuted","onceSealed","isUnknown","isPending","isExpired","scheduleTick","hasSubs","hwm","latestBlock","_put4","_put2","getEvents","height","_put3","_put6","clearTimeout","spawnEvents","addServices","Boolean","include","addExtensions","input","reduce","chain","fn","asyncPipe","filter","filterServicesByType","spawnProviders","discovery","cb","onMessageFromFCL","messageType","internal","interaction","buildData","sendMsgToFCL","parent","opener","rightPaddedHexBuffer","pad","Buffer","padEnd","addressBuffer","padStart","Number","USER_DOMAIN_TAG","APP_DOMAIN_TAG","concat","rlpEncode","types","prepMutation","defaultResolve","resolveFunction","createSignableVoucher","pipe"],"mappings":"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"}